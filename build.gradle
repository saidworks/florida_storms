plugins {
	id 'java'
	alias(libs.plugins.spring.boot)
	alias(libs.plugins.spring.dependency.management)
	alias(libs.plugins.spotless)
}

group = 'com.saidworks'
version = '0.0.1-SNAPSHOT'
description = 'florida_storms'

apply from: 'buildScript/format.gradle'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(libs.versions.java.get())
	}
}

springBoot{
	mainClass = "com.saidworks.florida_storms.FloridaStormsApplication"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	testCompileOnly {
		extendsFrom annotationProcessor
	}

}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation(libs.spring.boot.starter.web) {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}

	// annotation processor
	compileOnly(libs.lombok)
	annotationProcessor(libs.lombok)

	// Logging dependencies
	implementation libs.log4j.core
	implementation libs.log4j.api
	runtimeOnly libs.log4j.layout.template.json
	implementation libs.dflib

	// JSON processing for API calls
	implementation libs.jackson.core

	// Report generation
	implementation (libs.apache.poi){
		// this exclusion fix CVE-2025-48924
		exclude group: 'commons-io', module: 'commons-io'
		exclude group: 'org.apache.commons', module: 'commons-lang3'
	}
	implementation(libs.apache.poi.ooxml){
		// this exclusion fix CVE-2025-48924
		exclude group: 'commons-io', module: 'commons-io'
		exclude group: 'org.apache.commons', module: 'commons-lang3'
	}
	implementation(libs.apache.commons)
	implementation(libs.apache.commons.lang3)
	// useful for development in spring boot
	developmentOnly libs.spring.boot.devtools

	testAnnotationProcessor(libs.lombok)
	testImplementation libs.spring.boot.starter.test
	testImplementation libs.assertj.core
	testRuntimeOnly libs.junit.platform.launcher
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}
